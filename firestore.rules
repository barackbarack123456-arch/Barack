rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function getUserRole() {
      return get(/databases/$(database)/documents/usuarios/$(request.auth.uid)).data.role;
    }

    function isAdmin() {
      let adminUIDs = ['7M6XuPSQf0UHUvet5KnEISxiYBT2', 'NIFudxxXnea8HqFzeMpxY0kma5b2'];
      return request.auth.uid in adminUIDs || getUserRole() == 'administrador';
    }

    // Reglas para la colección de Usuarios
    // Los administradores pueden leer y escribir cualquier documento de usuario.
    // Cada usuario puede leer su propio documento.
    match /usuarios/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if isAdmin();
    }

    // Reglas para colecciones específicas.
    // Solo el creador del documento o un administrador puede leer o escribir.
    // Asume que cada documento tiene un campo 'createdBy' con el UID del creador.
    match /clientes/{clienteId} {
      allow read: if resource.data.createdBy == request.auth.uid || isAdmin();
      allow write: if (request.resource.data.createdBy == request.auth.uid || isAdmin())
                      && request.resource.data.nombre is string
                      && request.resource.data.nombre.size() > 0;
    }

    match /insumos/{insumoId} {
      allow read, write: if request.resource.data.createdBy == request.auth.uid || isAdmin();
    }

    match /productos/{productoId} {
      allow read, write: if request.resource.data.createdBy == request.auth.uid || isAdmin();
    }

    match /proveedores/{proveedorId} {
      allow read, write: if request.resource.data.createdBy == request.auth.uid || isAdmin();
    }

    match /proyectos/{proyectoId} {
      allow read, write: if request.resource.data.createdBy == request.auth.uid || isAdmin();
    }

    match /sinoptico/{sinopticoId} {
      allow read, write: if request.resource.data.createdBy == request.auth.uid || isAdmin();
    }
  }
}
